---
pageable: false
title: 'TTC Ridership Analysis 1985 - 2018'
framework: 'D3'
tool: 'Vue.js + D3.js v5'
desc: 'Practice | An interactive bar chart showing the TTC Ridership from 1985 to 2018 | Annideas?'
---

blockquote
  | 2019/01/26 Note:
  br
  | Issue 1: Still not working on Mobile and Firefox
  br
  | Issue 2: Should enhance the draggable bar and the transtion while year is changing 

#layout
  #container
    svg viewbox=("0 0 1200 700")
  #app
    .slidecontainer
      button.slider-prev
      input#myRange.slider max="2018" min="1985" type="range" v-model="sliderValue"
      button.slider-next
      .year-block
        - (1985..2018).to_a.each do |i|
          div class="year-mark #{'select' if i == 2018}" attr-year="#{i}" = i

javascript:
  var vm = new Vue({
    el: '#app',
    data:{
      sliderValue: 2018
    }
  })

  const svg = d3.select('svg');

  const margin = {top: 80, right: 50, bottom: 160, left: 400};
  const width = 1200 - margin.left - margin.right;
  const height = 700 - margin.top - margin.bottom;

  const chart = svg.append('g')
    .attr('transform', `translate(${margin.left}, ${margin.top})`);
  
  const xScale = d3.scaleLinear()
    .range([0, width])
    .domain([0, 225000]);

  chart.append('g')
    .attr('transform', `translate(0, ${height})`)
    .call(d3.axisBottom(xScale));
  
  svg
    .append('text')
    .attr('class', 'label')
    .attr('x', -(height / 2) - margin.top)
    .attr('y', margin.top / 2.4)
    .attr('transform', 'rotate(-90)')
    .attr('text-anchor', 'middle')
    .text('Fare Media')

  svg.append('text')
    .attr('class', 'label')
    .attr('x', width / 2 + margin.left)
    .attr('y', height + margin.right * 2.4)
    .attr('text-anchor', 'middle')
    .text('Payment ($)')
  
  svg.append('text')
    .attr('class', 'title')
    .attr('x', width / 2 + margin.left / 2)
    .attr('y', 40)
    .attr('text-anchor', 'middle')
    .text(`TTC Ridership Analysis 2018`)

  svg.append('text')
    .attr('class', 'year')
    .attr('x', -(height) - 165)
    .attr('y', margin.top / 2.4)
    .attr('transform', 'rotate(-90)')
    .attr('text-anchor', 'middle')
    .text('Year')
  
  svg.append('text')
    .attr('class', 'source')
    .attr('x', width + margin.left/2.5)
    .attr('y', height + margin.bottom * 1.4)
    .attr('text-anchor', 'start')
    .text('Source: City of Toronto / Open Data, 2018')

  d3.json("/files/test_data.json").then(function(data) {
    const sample = data;
    
    const yScale = d3.scaleBand()
      .range([0, height])
      .domain(sample[0][2018].map((s) => s.fare_media))
      .padding(0.3)
    
    const makeYLines = () => d3.axisLeft()
      .scale(yScale)
    
    chart.append('g')
      .call(d3.axisLeft(yScale));
  
    chart.append('g')
      .attr('class', 'grid')
      .call(makeYLines()
        .tickSize(-width, 0, 0)
        .tickFormat('')
      )

    const barGroups = chart.selectAll()
      .data(sample[0][2018])
      .enter()
      .append('g')

    barGroups
      .append('rect')
      .attr('class', 'bar')
      // .attr('x', (g) => xScale(g.payment))
      .attr('width', (g) => xScale(g.payment))
      .attr('y', (g) => yScale(g.fare_media))
      .attr('height', yScale.bandwidth())
      
    barGroups 
      .append('text')
      .attr('class', 'fare_media')
      .attr('x', (a) => xScale(a.payment) + 30)
      .attr('y', (a) => yScale(a.fare_media) + yScale.bandwidth() / 1.5)
      .attr('text-anchor', 'middle')
      .text((a) => `$${d3.format(",")(a.payment)}`)
    
    function updateData() {
      chart.selectAll('rect.bar')
        .data(sample[0][vm.sliderValue])
        .attr('y', (g) => yScale(g.fare_media))
        .attr('height', yScale.bandwidth())
        .transition()
        .duration(500)
        .attr('width', (g) => xScale(g.payment))
        
      chart
        .selectAll('text.fare_media')
        .data(sample[0][vm.sliderValue])
        .attr('y', (a) => yScale(a.fare_media) + yScale.bandwidth() / 1.5)
        .attr('text-anchor', 'middle')
        .text((a) => `$${d3.format(",")(a.payment)}`)
        .transition()
        .duration(500)
        .attr('x', (a) => xScale(a.payment) + 30)

      d3.select("text.title").text(`TTC Ridership Analysis ${vm.sliderValue}`);
      d3.select(".year-mark.select").classed("select", false);
      d3.select("[attr-year='" + vm.sliderValue + "']").classed("select", true);
    }

    d3.select('#myRange').on('change', function() {
      updateData();
    });

    d3.select('button.slider-prev').on('click', function() {
      if (vm.sliderValue > 1985) {
        vm.sliderValue -= 1;
        updateData();
      }
    });

    d3.select('button.slider-next').on('click', function() {
      if (vm.sliderValue < 2018) {
        vm.sliderValue = parseInt(vm.sliderValue) + 1;
        updateData();
      }
    });
  });
